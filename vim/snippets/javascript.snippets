###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet get "Get Elements"
getElement${1/(T)|.*/(?1:s)/}By${1:T}${1/(T)|(I)|.*/(?1:agName)(?2:d)/}('$2')
endsnippet

snippet define "Define a new RequireJS module"
define([$1], function ($2) {
    $0
});
endsnippet

snippet '':f "object method string"
'${1:${2:#thing}:${3:click}}': function (element){
	$0
}${10:,}
endsnippet

snippet :f "Object Method"
${1:method_name}: function (${3:attribute}){
	$0
}${10:,}
endsnippet

snippet :, "Object Value JS"
${1:value_name}:${0:value},
endsnippet

snippet : "Object key key: 'value'"
${1:key}: ${2:"${3:value}"}${4:, }
endsnippet

snippet proto "Prototype (proto)"
${1:constructor}.prototype.${2:method_name} = function (${3}) {
	${0}
};
 
endsnippet

snippet for "for (...) {...} (faster)"
for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2--){
	${3:$1[$2]}$0
};
endsnippet

snippet for "for (...) {...}"
for (var ${2:i}=0; $2 < ${1:Things}.length; $2++) {
	${3:$1[$2]}$0
};
endsnippet

snippet fun "function (fun)"
function ${1:name}($2) {
	$0
}
endsnippet

snippet fn "function (fn)" w
function ($1) {
	$0
}
endsnippet

snippet if "if"
if ($1) {
    $0
}
endsnippet

snippet elseif "else if"
else if ($1) {
    $0
}
endsnippet

snippet else "else"
else {
    $0
}
endsnippet

snippet timeout "setTimeout function"
setTimeout(function () {$0}${2:}, ${1:10});
endsnippet

snippet that "var that = this;" w
var that = this;
endsnippet

snippet forEach "array.forEach" w
forEach(function (${1:item}) {
    $0
})
endsnippet

snippet filter "array.filter" w
filter(function (${1:item}) {
    $0
})
endsnippet

snippet map "array.map" w
map(function (${1:item}) {
    $0
})
endsnippet

snippet every "array.every" w
every(function (${1:item}) {
    $0
})
endsnippet

snippet some "array.some" w
some(function (${1:item}) {
    $0
})
endsnippet

snippet reduce "array.reduce" w
reduce(function (${1:result}, ${2:item}${3:, ${4:index}}) {
    $0
}${5:, ${6:initialValue}})
endsnippet

# vim:ft=snippets:
